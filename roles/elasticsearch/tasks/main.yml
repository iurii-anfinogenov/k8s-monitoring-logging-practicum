# roles/elasticsearch/tasks/main.yml

---
- name: Установка Docker (если не установлен)
  ansible.builtin.apt:
    name: docker.io
    state: present
    update_cache: yes
  become: true

- name: Установка Python-модуля docker (для community.docker.docker_container)
  ansible.builtin.pip:
    name:
      - docker
      - docker-compose
    state: present
  become: true

- name: Удаляем старый контейнер Elasticsearch
  community.docker.docker_container:
    name: "{{ elasticsearch_container_name }}"
    state: absent
  become: true

- name: Удаляем старый контейнер Kibana
  community.docker.docker_container:
    name: "{{ kibana_container_name }}"
    state: absent
  become: true

- name: Запуск Elasticsearch без аутентификации
  community.docker.docker_container:
    name: "{{ elasticsearch_container_name }}"
    image: "elasticsearch:{{ elasticsearch_version }}"
    state: started
    restart_policy: always
    recreate: true
    ports:
      - "{{ elasticsearch_http_port }}:9200"
    env:
      discovery.type: "single-node"
      network.host: "0.0.0.0"
      # Отключаем безопасность и токены
      # xpack.security.enabled: "false"
      # xpack.security.enrollment.enabled: "false"
      # xpack.security.http.ssl.enabled: "false"
      # xpack.security.transport.ssl.enabled: "false"
  become: true


- name: Запуск Kibana
  community.docker.docker_container:
    name: "{{ kibana_container_name }}"
    image: "kibana:{{ kibana_version }}"
    state: started
    restart_policy: always
    recreate: true
    ports:
      - "{{ kibana_http_port }}:5601"
    env:
      ELASTICSEARCH_HOSTS: "http://{{ elasticsearch_container_name }}:9200"
      SERVER_HOST: "0.0.0.0"
      # XPACK_SECURITY_ENABLED: "false"  # без авторизации
  become: true
